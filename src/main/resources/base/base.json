{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "avZone": {
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Default": "us-east-1a",
      "AllowedValues": [
        "us-east-1a"
      ],
      "Description": "Availability Zone"
    },
    "vpcRegion": {
      "Type": "String",
      "Default": "",
      "Description": "Region to used for VPC deployment"
    },
    "ec2KeyPair": {
      "Description": "Amazon EC2 Key Pair",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "aws-poc"
    },
    "environmentName": {
      "Type": "String",
      "Default": "",
      "Description": "Stack Name"
    }
  },
  "Resources": {
    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.98.36.0/24",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-vpc" ] ] }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-internetGateway" ] ] }
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PrivateHostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "HostedZoneConfig": {
          "Comment": "Hosted zone for jnonino.net"
        },
        "Name": "jnonino.net",
        "VPCs": [
          {
            "VPCId": { "Ref": "Vpc" },
            "VPCRegion": { "Ref": "vpcRegion" }
          }
        ],
        "HostedZoneTags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-hostedZone" ] ] }
          }
        ]
      }
    },
    "NetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-netAcl" ] ] }
          }
        ]
      }
    },
    "inboundAllowTraficInboundNetAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NetworkAcl" },
        "Egress": "false",
        "RuleNumber": 120,
        "Protocol": 6,
        "PortRange": {
          "From": "1024",
          "To": "65535"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleAction": "allow"
      }
    },
    "inboundAllowTraficFromInsideNetAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NetworkAcl" },
        "Egress": "false",
        "RuleNumber": 130,
        "Protocol": "-1",
        "PortRange": {
          "From": "-1",
          "To": "-1"
        },
        "CidrBlock": "10.98.36.0/24",
        "RuleAction": "allow"
      }
    },
    "outboundAllowNetAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NetworkAcl" },
        "Egress": "true",
        "RuleNumber": 100,
        "Protocol": "-1",
        "PortRange": {
          "From": "-1",
          "To": "-1"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleAction": "allow"
      }
    },
    "PubSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Ref": "avZone" },
        "CidrBlock": "10.98.36.128/26",
        "MapPublicIpOnLaunch": false,
        "VpcId": { "Ref": "Vpc" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-pubSubnet" ] ] }
          }
        ]
      }
    },
    "PublicRouteRable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-pubRouteTable" ] ] }
          }
        ]
      }
    },
    "publicRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PubSubnet" },
        "RouteTableId": { "Ref": "PublicRouteRable" }
      }
    },
    "InternetEgressRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "InternetGateway",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteRable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },
    "PubSubnetNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PubSubnet" },
        "NetworkAclId": { "Ref": "NetworkAcl" }
      }
    },
    "PrivSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Ref": "avZone" },
        "CidrBlock": "10.98.36.0/26",
        "MapPublicIpOnLaunch": false,
        "VpcId": { "Ref": "Vpc" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-privSubnet" ] ] }
          }
        ]
      }
    },
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-privRouteTable" ] ] }
          }
        ]
      }
    },
    "privateRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivSubnet" },
        "RouteTableId": { "Ref": "PrivateRouteTable" }
      }
    },
    "PrivSubnetNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivSubnet" },
        "NetworkAclId": { "Ref": "NetworkAcl" }
      }
    },
    "InternalTraffic": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow traffic to instances on private subnet",
        "VpcId": { "Ref": "Vpc" },
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.98.36.128/26",
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-internalSecurityGroup" ] ] }
          }
        ]
      }
    },
    "AllowSecureTraffic": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow SSH and HTTPS",
        "VpcId": { "Ref": "Vpc" },
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.98.36.0/26",
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "", [ { "Ref": "environmentName" }, "-allowSshSecurityGroup" ] ] }
          }
        ]
      }
    }
  },
  "Outputs": {
    "environmentName": {
      "Description": "Name of the environment",
      "Value": { "Ref": "environmentName" }
    },
    "ec2KeyPair": {
      "Description": "EC2 Key Pair to Connect to Instances",
      "Value": { "Ref": "ec2KeyPair" }
    },
    "PrivateHostedZone": {
      "Description": "Private Hosted Zone",
      "Value": { "Ref": "PrivateHostedZone" }
    },
    "PubSubnet": {
      "Description": "Public Subnet",
      "Value": { "Ref": "PubSubnet" }
    },
    "AllowSecureTraffic": {
      "Description": "Security Group to Allow Secure Traffic",
      "Value": { "Ref": "AllowSecureTraffic" }
    }
  }
}
